{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nanthini\\\\product\\\\react_project\\\\customer-labs\\\\my-app\\\\src\\\\Pages\\\\home.jsx\",\n  _s = $RefreshSig$();\n// import React,{useState, useEffect} from 'react'\n// import Form from '../Components/Form'\n\n// const Home = () => {\n//     const[isOpen, setIsOpen] = useState(false)\n\n//     return(\n//         <>\n//             <button className='p-5 bg-blue-400 border-white ml-auto mr-auto block mt-5 text-white cursor-pointer' onClick={()=>setIsOpen(true)}>\n//                 Save Segment\n//             </button>\n\n//             {/* form component */}\n//             {isOpen && <Form isOpen={isOpen} setIsOpen={setIsOpen} />}\n//         </>\n//     )\n// }\n\n// export default Home\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialSchemas = [{\n  label: 'First Name',\n  value: 'first_name'\n}, {\n  label: 'Last Name',\n  value: 'last_name'\n}, {\n  label: 'Gender',\n  value: 'gender'\n}, {\n  label: 'Age',\n  value: 'age'\n}, {\n  label: 'Account Name',\n  value: 'account_name'\n}, {\n  label: 'City',\n  value: 'city'\n}, {\n  label: 'State',\n  value: 'state'\n}];\nconst Home = () => {\n  _s();\n  const [isPopupOpen, setPopupOpen] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchema, setSelectedSchema] = useState('');\n  const [addedSchemas, setAddedSchemas] = useState([]);\n  const handleSaveSegmentClick = () => {\n    setPopupOpen(true);\n  };\n  const handleClosePopup = () => {\n    setPopupOpen(false);\n  };\n  const handleSchemaChange = e => {\n    setSelectedSchema(e.target.value);\n  };\n  const handleAddNewSchema = () => {\n    if (selectedSchema && !addedSchemas.includes(selectedSchema)) {\n      setAddedSchemas([...addedSchemas, selectedSchema]);\n      setSelectedSchema('');\n    }\n  };\n  const handleSave = () => {\n    const dataToSend = {\n      segment_name: segmentName,\n      schema: addedSchemas.map(value => {\n        var _initialSchemas$find;\n        return {\n          [value]: (_initialSchemas$find = initialSchemas.find(schema => schema.value === value)) === null || _initialSchemas$find === void 0 ? void 0 : _initialSchemas$find.label\n        };\n      })\n    };\n    fetch('https://webhook.site/YOUR_WEBHOOK_URL', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataToSend)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      handleClosePopup();\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const availableSchemas = initialSchemas.filter(schema => !addedSchemas.includes(schema.value));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveSegmentClick,\n      children: \"Save segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '20%',\n        left: '30%',\n        width: '40%',\n        backgroundColor: 'white',\n        border: '1px solid #ccc',\n        padding: '20px',\n        boxShadow: '0 0 10px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Save Segment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Segment Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: segmentName,\n            onChange: e => setSegmentName(e.target.value),\n            style: {\n              marginLeft: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Add schema to segment:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedSchema,\n            onChange: handleSchemaChange,\n            style: {\n              marginLeft: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Schema\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), availableSchemas.map(schema => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: schema.value,\n              children: schema.label\n            }, schema.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddNewSchema,\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"+Add new schema\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          padding: '10px',\n          backgroundColor: 'lightblue'\n        },\n        children: addedSchemas.map((schema, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: schema,\n              onChange: e => {\n                const newSchemas = [...addedSchemas];\n                newSchemas[index] = e.target.value;\n                setAddedSchemas(newSchemas);\n              },\n              children: initialSchemas.filter(s => !addedSchemas.includes(s.value)).map(schema => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: schema.value,\n                children: schema.label\n              }, schema.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClosePopup,\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"LlWTukmLG+Zds2NCjSBFFXEfUpU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialSchemas","label","value","Home","_s","isPopupOpen","setPopupOpen","segmentName","setSegmentName","selectedSchema","setSelectedSchema","addedSchemas","setAddedSchemas","handleSaveSegmentClick","handleClosePopup","handleSchemaChange","e","target","handleAddNewSchema","includes","handleSave","dataToSend","segment_name","schema","map","_initialSchemas$find","find","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","availableSchemas","filter","style","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","position","top","left","width","backgroundColor","border","boxShadow","marginBottom","type","onChange","marginLeft","index","newSchemas","s","_c","$RefreshReg$"],"sources":["D:/Nanthini/product/react_project/customer-labs/my-app/src/Pages/home.jsx"],"sourcesContent":["// import React,{useState, useEffect} from 'react'\r\n// import Form from '../Components/Form'\r\n\r\n// const Home = () => {\r\n//     const[isOpen, setIsOpen] = useState(false)\r\n\r\n//     return(\r\n//         <>\r\n//             <button className='p-5 bg-blue-400 border-white ml-auto mr-auto block mt-5 text-white cursor-pointer' onClick={()=>setIsOpen(true)}>\r\n//                 Save Segment\r\n//             </button>\r\n            \r\n//             {/* form component */}\r\n//             {isOpen && <Form isOpen={isOpen} setIsOpen={setIsOpen} />}\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default Home\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst initialSchemas = [\r\n  { label: 'First Name', value: 'first_name' },\r\n  { label: 'Last Name', value: 'last_name' },\r\n  { label: 'Gender', value: 'gender' },\r\n  { label: 'Age', value: 'age' },\r\n  { label: 'Account Name', value: 'account_name' },\r\n  { label: 'City', value: 'city' },\r\n  { label: 'State', value: 'state' },\r\n];\r\n\r\nconst Home = () => {\r\n  const [isPopupOpen, setPopupOpen] = useState(false);\r\n  const [segmentName, setSegmentName] = useState('');\r\n  const [selectedSchema, setSelectedSchema] = useState('');\r\n  const [addedSchemas, setAddedSchemas] = useState([]);\r\n\r\n  const handleSaveSegmentClick = () => {\r\n    setPopupOpen(true);\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setPopupOpen(false);\r\n  };\r\n\r\n  const handleSchemaChange = (e) => {\r\n    setSelectedSchema(e.target.value);\r\n  };\r\n\r\n  const handleAddNewSchema = () => {\r\n    if (selectedSchema && !addedSchemas.includes(selectedSchema)) {\r\n      setAddedSchemas([...addedSchemas, selectedSchema]);\r\n      setSelectedSchema('');\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const dataToSend = {\r\n      segment_name: segmentName,\r\n      schema: addedSchemas.map(value => ({\r\n        [value]: initialSchemas.find(schema => schema.value === value)?.label\r\n      }))\r\n    };\r\n\r\n    fetch('https://webhook.site/YOUR_WEBHOOK_URL', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(dataToSend),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log('Success:', data);\r\n      handleClosePopup();\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n  };\r\n\r\n  const availableSchemas = initialSchemas.filter(schema => !addedSchemas.includes(schema.value));\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <button onClick={handleSaveSegmentClick}>Save segment</button>\r\n      {isPopupOpen && (\r\n        <div style={{ position: 'fixed', top: '20%', left: '30%', width: '40%', backgroundColor: 'white', border: '1px solid #ccc', padding: '20px', boxShadow: '0 0 10px rgba(0,0,0,0.1)' }}>\r\n          <h2>Save Segment</h2>\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <label>\r\n              Segment Name:\r\n              <input\r\n                type=\"text\"\r\n                value={segmentName}\r\n                onChange={(e) => setSegmentName(e.target.value)}\r\n                style={{ marginLeft: '10px' }}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <label>\r\n              Add schema to segment:\r\n              <select\r\n                value={selectedSchema}\r\n                onChange={handleSchemaChange}\r\n                style={{ marginLeft: '10px' }}\r\n              >\r\n                <option value=\"\">Select Schema</option>\r\n                {availableSchemas.map(schema => (\r\n                  <option key={schema.value} value={schema.value}>{schema.label}</option>\r\n                ))}\r\n              </select>\r\n              <button onClick={handleAddNewSchema} style={{ marginLeft: '10px' }}>+Add new schema</button>\r\n            </label>\r\n          </div>\r\n          <div style={{ marginBottom: '10px', padding: '10px', backgroundColor: 'lightblue' }}>\r\n            {addedSchemas.map((schema, index) => (\r\n              <div key={index}>\r\n                <label>\r\n                  <select\r\n                    value={schema}\r\n                    onChange={(e) => {\r\n                      const newSchemas = [...addedSchemas];\r\n                      newSchemas[index] = e.target.value;\r\n                      setAddedSchemas(newSchemas);\r\n                    }}\r\n                  >\r\n                    {initialSchemas.filter(s => !addedSchemas.includes(s.value)).map(schema => (\r\n                      <option key={schema.value} value={schema.value}>{schema.label}</option>\r\n                    ))}\r\n                  </select>\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button onClick={handleSave}>Save</button>\r\n          <button onClick={handleClosePopup} style={{ marginLeft: '10px' }}>Close</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}