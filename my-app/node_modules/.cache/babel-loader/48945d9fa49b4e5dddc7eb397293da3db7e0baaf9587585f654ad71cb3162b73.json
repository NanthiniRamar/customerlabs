{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nanthini\\\\product\\\\react_project\\\\customer-labs\\\\my-app\\\\src\\\\Components\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  isOpen,\n  setIsOpen\n}) => {\n  _s();\n  const initialSchemas = [{\n    label: 'First Name',\n    value: 'first_name'\n  }, {\n    label: 'Last Name',\n    value: 'last_name'\n  }, {\n    label: 'Gender',\n    value: 'gender'\n  }, {\n    label: 'Age',\n    value: 'age'\n  }, {\n    label: 'Account Name',\n    value: 'account_name'\n  }, {\n    label: 'City',\n    value: 'city'\n  }, {\n    label: 'State',\n    value: 'state'\n  }];\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchemas, setSelectedSchemas] = useState([]);\n  const [availableSchemas, setAvailableSchemas] = useState(initialSchemas);\n  const [selectedSchema, setSelectedSchema] = useState('');\n\n  // Track selected values for each dropdown\n  const [dropdownValues, setDropdownValues] = useState({});\n\n  // Initialize dropdownValues when selectedSchemas changes\n  useEffect(() => {\n    const initialValues = selectedSchemas.reduce((acc, schema, index) => {\n      acc[index] = schema.value;\n      return acc;\n    }, {});\n    setDropdownValues(initialValues);\n  }, [selectedSchemas]);\n  const handleAddSchema = () => {\n    if (selectedSchema) {\n      const schema = availableSchemas.find(s => s.value === selectedSchema);\n      if (schema && !selectedSchemas.some(s => s.value === selectedSchema)) {\n        setSelectedSchemas(prevSchemas => [...prevSchemas, schema]);\n        setAvailableSchemas(prevSchemas => prevSchemas.filter(s => s.value !== selectedSchema));\n        setSelectedSchema('');\n      }\n    }\n  };\n  const handleSchemaChange = (index, value) => {\n    const newSchema = initialSchemas.find(s => s.value === value);\n    if (newSchema) {\n      setSelectedSchemas(prevSchemas => {\n        const updatedSchemas = prevSchemas.map((s, i) => i === index ? newSchema : s);\n        return updatedSchemas;\n      });\n\n      // Update the individual dropdown value\n      setDropdownValues(prevValues => ({\n        ...prevValues,\n        [index]: value\n      }));\n    }\n  };\n  const getOptions = currentValue => {\n    return availableSchemas.filter(s => s.value !== currentValue);\n  };\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: selectedSchemas.map(s => ({\n        [s.value]: s.label\n      }))\n    };\n    console.log('Saving data to server:', data);\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 flex items-center justify-end bg-gray-500 bg-opacity-75\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative bg-white w-1/3 h-full p-6 shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"absolute top-2 right-2 text-gray-600 hover:text-gray-800\",\n        onClick: () => setIsOpen(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-[24px] block cursor-pointer\",\n          onClick: () => setIsOpen(false),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../arrow-drop-left-line.png\",\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Saving Segment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter the name of the segment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter segment name\",\n          value: segmentName,\n          onChange: e => setSegmentName(e.target.value),\n          className: \"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"To save your segment, you need to build your query.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedSchema,\n            onChange: e => setSelectedSchema(e.target.value),\n            className: \"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 bg-white w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select schema to add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), availableSchemas.map(schema => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: schema.value,\n              children: schema.label\n            }, schema.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddSchema,\n            className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600\",\n            children: \"+ Add new schema\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 bg-blue-100 p-4 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"schemas-\", JSON.stringify(selectedSchemas)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), selectedSchemas.map((schema, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: dropdownValues[index] || schema.value // Use dropdownValues for selected value\n              ,\n              onChange: e => handleSchemaChange(index, e.target.value),\n              className: \"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 bg-white w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: [\"Select schema-\", schema.value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), getOptions(dropdownValues[index] || schema.value).map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: s.value,\n                children: s.label\n              }, s.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2\",\n              children: [\"Selected value: \", schema.label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveSegment,\n          className: \"mt-4 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600\",\n          children: \"Save Segment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"glQ4Ba0mnpygBK/BK2eBTVQC9iw=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Form","isOpen","setIsOpen","_s","initialSchemas","label","value","segmentName","setSegmentName","selectedSchemas","setSelectedSchemas","availableSchemas","setAvailableSchemas","selectedSchema","setSelectedSchema","dropdownValues","setDropdownValues","initialValues","reduce","acc","schema","index","handleAddSchema","find","s","some","prevSchemas","filter","handleSchemaChange","newSchema","updatedSchemas","map","i","prevValues","getOptions","currentValue","handleSaveSegment","data","segment_name","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","onChange","e","target","disabled","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/Nanthini/product/react_project/customer-labs/my-app/src/Components/Form.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Form = ({ isOpen, setIsOpen }) => {\r\n  const initialSchemas = [\r\n    { label: 'First Name', value: 'first_name' },\r\n    { label: 'Last Name', value: 'last_name' },\r\n    { label: 'Gender', value: 'gender' },\r\n    { label: 'Age', value: 'age' },\r\n    { label: 'Account Name', value: 'account_name' },\r\n    { label: 'City', value: 'city' },\r\n    { label: 'State', value: 'state' }\r\n  ];\r\n\r\n  const [segmentName, setSegmentName] = useState('');\r\n  const [selectedSchemas, setSelectedSchemas] = useState([]);\r\n  const [availableSchemas, setAvailableSchemas] = useState(initialSchemas);\r\n  const [selectedSchema, setSelectedSchema] = useState('');\r\n\r\n  // Track selected values for each dropdown\r\n  const [dropdownValues, setDropdownValues] = useState({});\r\n\r\n  // Initialize dropdownValues when selectedSchemas changes\r\n  useEffect(() => {\r\n    const initialValues = selectedSchemas.reduce((acc, schema, index) => {\r\n      acc[index] = schema.value;\r\n      return acc;\r\n    }, {});\r\n    setDropdownValues(initialValues);\r\n  }, [selectedSchemas]);\r\n\r\n  const handleAddSchema = () => {\r\n    if (selectedSchema) {\r\n      const schema = availableSchemas.find(s => s.value === selectedSchema);\r\n      if (schema && !selectedSchemas.some(s => s.value === selectedSchema)) {\r\n        setSelectedSchemas(prevSchemas => [...prevSchemas, schema]);\r\n        setAvailableSchemas(prevSchemas => prevSchemas.filter(s => s.value !== selectedSchema));\r\n        setSelectedSchema('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSchemaChange = (index, value) => {\r\n    const newSchema = initialSchemas.find(s => s.value === value);\r\n    if (newSchema) {\r\n      setSelectedSchemas(prevSchemas => {\r\n        const updatedSchemas = prevSchemas.map((s, i) =>\r\n          i === index ? newSchema : s\r\n        );\r\n        return updatedSchemas;\r\n      });\r\n\r\n      // Update the individual dropdown value\r\n      setDropdownValues(prevValues => ({\r\n        ...prevValues,\r\n        [index]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const getOptions = (currentValue) => {\r\n    return availableSchemas.filter(s => s.value !== currentValue);\r\n  };\r\n\r\n  const handleSaveSegment = () => {\r\n    const data = {\r\n      segment_name: segmentName,\r\n      schema: selectedSchemas.map(s => ({ [s.value]: s.label }))\r\n    };\r\n    console.log('Saving data to server:', data);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-end bg-gray-500 bg-opacity-75\">\r\n      <div className=\"relative bg-white w-1/3 h-full p-6 shadow-lg\">\r\n        <button\r\n          className=\"absolute top-2 right-2 text-gray-600 hover:text-gray-800\"\r\n          onClick={() => setIsOpen(false)}\r\n        >\r\n          &times;\r\n        </button>\r\n        <div className=\"header flex items-center\">\r\n          <span className=\"w-[24px] block cursor-pointer\" onClick={() => setIsOpen(false)}>\r\n            <img src=\"../arrow-drop-left-line.png\" alt=\"Close\" />\r\n          </span>\r\n          <h2 className=\"text-xl font-bold\">Saving Segment</h2>\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <p>Enter the name of the segment</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter segment name\"\r\n            value={segmentName}\r\n            onChange={(e) => setSegmentName(e.target.value)}\r\n            className=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500 w-full\"\r\n          />\r\n          <p className=\"mt-4\">To save your segment, you need to build your query.</p>\r\n          <div className=\"mt-4\">\r\n            <select\r\n              value={selectedSchema}\r\n              onChange={(e) => setSelectedSchema(e.target.value)}\r\n              className=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 bg-white w-full\"\r\n            >\r\n              <option value=\"\" disabled>Select schema to add</option>\r\n              {availableSchemas.map(schema => (\r\n                <option key={schema.value} value={schema.value}>{schema.label}</option>\r\n              ))}\r\n            </select>\r\n            <button\r\n              onClick={handleAddSchema}\r\n              className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600\"\r\n            >\r\n              + Add new schema\r\n            </button>\r\n          </div>\r\n          <div className=\"mt-4 bg-blue-100 p-4 rounded-md\">\r\n            <p>schemas-{JSON.stringify(selectedSchemas)}</p>\r\n            {selectedSchemas.map((schema, index) => (\r\n              <div key={index} className=\"mb-2\">\r\n                <select\r\n                  value={dropdownValues[index] || schema.value} // Use dropdownValues for selected value\r\n                  onChange={(e) => handleSchemaChange(index, e.target.value)}\r\n                  className=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 bg-white w-full\"\r\n                >\r\n                  <option value=\"\" disabled>Select schema-{schema.value}</option>\r\n                  {getOptions(dropdownValues[index] || schema.value).map(s => (\r\n                    <option key={s.value} value={s.value}>{s.label}</option>\r\n                  ))}\r\n                </select>\r\n                <p className=\"mt-2\">Selected value: {schema.label}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button\r\n            onClick={handleSaveSegment}\r\n            className=\"mt-4 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600\"\r\n          >\r\n            Save Segment\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,cAAc,GAAG,CACrB;IAAEC,KAAK,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAa,CAAC,EAC5C;IAAED,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC9B;IAAED,KAAK,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAe,CAAC,EAChD;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,CACnC;EAED,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAACQ,cAAc,CAAC;EACxE,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMoB,aAAa,GAAGR,eAAe,CAACS,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,EAAEC,KAAK,KAAK;MACnEF,GAAG,CAACE,KAAK,CAAC,GAAGD,MAAM,CAACd,KAAK;MACzB,OAAOa,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACNH,iBAAiB,CAACC,aAAa,CAAC;EAClC,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;EAErB,MAAMa,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIT,cAAc,EAAE;MAClB,MAAMO,MAAM,GAAGT,gBAAgB,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClB,KAAK,KAAKO,cAAc,CAAC;MACrE,IAAIO,MAAM,IAAI,CAACX,eAAe,CAACgB,IAAI,CAACD,CAAC,IAAIA,CAAC,CAAClB,KAAK,KAAKO,cAAc,CAAC,EAAE;QACpEH,kBAAkB,CAACgB,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAEN,MAAM,CAAC,CAAC;QAC3DR,mBAAmB,CAACc,WAAW,IAAIA,WAAW,CAACC,MAAM,CAACH,CAAC,IAAIA,CAAC,CAAClB,KAAK,KAAKO,cAAc,CAAC,CAAC;QACvFC,iBAAiB,CAAC,EAAE,CAAC;MACvB;IACF;EACF,CAAC;EAED,MAAMc,kBAAkB,GAAGA,CAACP,KAAK,EAAEf,KAAK,KAAK;IAC3C,MAAMuB,SAAS,GAAGzB,cAAc,CAACmB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClB,KAAK,KAAKA,KAAK,CAAC;IAC7D,IAAIuB,SAAS,EAAE;MACbnB,kBAAkB,CAACgB,WAAW,IAAI;QAChC,MAAMI,cAAc,GAAGJ,WAAW,CAACK,GAAG,CAAC,CAACP,CAAC,EAAEQ,CAAC,KAC1CA,CAAC,KAAKX,KAAK,GAAGQ,SAAS,GAAGL,CAC5B,CAAC;QACD,OAAOM,cAAc;MACvB,CAAC,CAAC;;MAEF;MACAd,iBAAiB,CAACiB,UAAU,KAAK;QAC/B,GAAGA,UAAU;QACb,CAACZ,KAAK,GAAGf;MACX,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAM4B,UAAU,GAAIC,YAAY,IAAK;IACnC,OAAOxB,gBAAgB,CAACgB,MAAM,CAACH,CAAC,IAAIA,CAAC,CAAClB,KAAK,KAAK6B,YAAY,CAAC;EAC/D,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,IAAI,GAAG;MACXC,YAAY,EAAE/B,WAAW;MACzBa,MAAM,EAAEX,eAAe,CAACsB,GAAG,CAACP,CAAC,KAAK;QAAE,CAACA,CAAC,CAAClB,KAAK,GAAGkB,CAAC,CAACnB;MAAM,CAAC,CAAC;IAC3D,CAAC;IACDkC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,IAAI,CAAC;EAC7C,CAAC;EAED,IAAI,CAACpC,MAAM,EAAE,OAAO,IAAI;EAExB,oBACEF,OAAA;IAAK0C,SAAS,EAAC,uEAAuE;IAAAC,QAAA,eACpF3C,OAAA;MAAK0C,SAAS,EAAC,8CAA8C;MAAAC,QAAA,gBAC3D3C,OAAA;QACE0C,SAAS,EAAC,0DAA0D;QACpEE,OAAO,EAAEA,CAAA,KAAMzC,SAAS,CAAC,KAAK,CAAE;QAAAwC,QAAA,EACjC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThD,OAAA;QAAK0C,SAAS,EAAC,0BAA0B;QAAAC,QAAA,gBACvC3C,OAAA;UAAM0C,SAAS,EAAC,+BAA+B;UAACE,OAAO,EAAEA,CAAA,KAAMzC,SAAS,CAAC,KAAK,CAAE;UAAAwC,QAAA,eAC9E3C,OAAA;YAAKiD,GAAG,EAAC,6BAA6B;YAACC,GAAG,EAAC;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACPhD,OAAA;UAAI0C,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNhD,OAAA;QAAK0C,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnB3C,OAAA;UAAA2C,QAAA,EAAG;QAA6B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpChD,OAAA;UACEmD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,oBAAoB;UAChC7C,KAAK,EAAEC,WAAY;UACnB6C,QAAQ,EAAGC,CAAC,IAAK7C,cAAc,CAAC6C,CAAC,CAACC,MAAM,CAAChD,KAAK,CAAE;UAChDmC,SAAS,EAAC;QAAwH;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnI,CAAC,eACFhD,OAAA;UAAG0C,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAAmD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC3EhD,OAAA;UAAK0C,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB3C,OAAA;YACEO,KAAK,EAAEO,cAAe;YACtBuC,QAAQ,EAAGC,CAAC,IAAKvC,iBAAiB,CAACuC,CAAC,CAACC,MAAM,CAAChD,KAAK,CAAE;YACnDmC,SAAS,EAAC,gGAAgG;YAAAC,QAAA,gBAE1G3C,OAAA;cAAQO,KAAK,EAAC,EAAE;cAACiD,QAAQ;cAAAb,QAAA,EAAC;YAAoB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACtDpC,gBAAgB,CAACoB,GAAG,CAACX,MAAM,iBAC1BrB,OAAA;cAA2BO,KAAK,EAAEc,MAAM,CAACd,KAAM;cAAAoC,QAAA,EAAEtB,MAAM,CAACf;YAAK,GAAhDe,MAAM,CAACd,KAAK;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA6C,CACvE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eACThD,OAAA;YACE4C,OAAO,EAAErB,eAAgB;YACzBmB,SAAS,EAAC,oEAAoE;YAAAC,QAAA,EAC/E;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNhD,OAAA;UAAK0C,SAAS,EAAC,iCAAiC;UAAAC,QAAA,gBAC9C3C,OAAA;YAAA2C,QAAA,GAAG,UAAQ,EAACc,IAAI,CAACC,SAAS,CAAChD,eAAe,CAAC;UAAA;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC/CtC,eAAe,CAACsB,GAAG,CAAC,CAACX,MAAM,EAAEC,KAAK,kBACjCtB,OAAA;YAAiB0C,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAC/B3C,OAAA;cACEO,KAAK,EAAES,cAAc,CAACM,KAAK,CAAC,IAAID,MAAM,CAACd,KAAM,CAAC;cAAA;cAC9C8C,QAAQ,EAAGC,CAAC,IAAKzB,kBAAkB,CAACP,KAAK,EAAEgC,CAAC,CAACC,MAAM,CAAChD,KAAK,CAAE;cAC3DmC,SAAS,EAAC,gGAAgG;cAAAC,QAAA,gBAE1G3C,OAAA;gBAAQO,KAAK,EAAC,EAAE;gBAACiD,QAAQ;gBAAAb,QAAA,GAAC,gBAAc,EAACtB,MAAM,CAACd,KAAK;cAAA;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,EAC9Db,UAAU,CAACnB,cAAc,CAACM,KAAK,CAAC,IAAID,MAAM,CAACd,KAAK,CAAC,CAACyB,GAAG,CAACP,CAAC,iBACtDzB,OAAA;gBAAsBO,KAAK,EAAEkB,CAAC,CAAClB,KAAM;gBAAAoC,QAAA,EAAElB,CAAC,CAACnB;cAAK,GAAjCmB,CAAC,CAAClB,KAAK;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAmC,CACxD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC,eACThD,OAAA;cAAG0C,SAAS,EAAC,MAAM;cAAAC,QAAA,GAAC,kBAAgB,EAACtB,MAAM,CAACf,KAAK;YAAA;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAX9C1B,KAAK;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYV,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNhD,OAAA;UACE4C,OAAO,EAAEP,iBAAkB;UAC3BK,SAAS,EAAC,sEAAsE;UAAAC,QAAA,EACjF;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA9IIH,IAAI;AAAA0D,EAAA,GAAJ1D,IAAI;AAgJV,eAAeA,IAAI;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}