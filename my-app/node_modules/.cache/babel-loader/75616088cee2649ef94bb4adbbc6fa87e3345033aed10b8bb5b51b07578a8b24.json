{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nanthini\\\\product\\\\react_project\\\\customer-labs\\\\my-app\\\\src\\\\Components\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  isOpen,\n  setIsOpen\n}) => {\n  _s();\n  const initialSchemas = [{\n    label: 'First Name',\n    value: 'first_name'\n  }, {\n    label: 'Last Name',\n    value: 'last_name'\n  }, {\n    label: 'Gender',\n    value: 'gender'\n  }, {\n    label: 'Age',\n    value: 'age'\n  }, {\n    label: 'Account Name',\n    value: 'account_name'\n  }, {\n    label: 'City',\n    value: 'city'\n  }, {\n    label: 'State',\n    value: 'state'\n  }];\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchemas, setSelectedSchemas] = useState([]);\n  const [selectedSchema, setSelectedSchema] = useState('');\n\n  // Add selected schema to the list of selectedSchemas\n  const handleAddSchema = () => {\n    if (selectedSchema && !selectedSchemas.some(s => s.value === selectedSchema)) {\n      const schema = initialSchemas.find(s => s.value === selectedSchema);\n      setSelectedSchemas(prevSchemas => [...prevSchemas, schema]);\n      setSelectedSchema('');\n    }\n  };\n\n  // Handle change in the dropdown within blue box\n  const handleSchemaChange = (index, value) => {\n    const newSchema = initialSchemas.find(s => s.value === value);\n    if (newSchema) {\n      setSelectedSchemas(prevSchemas => {\n        const updatedSchemas = prevSchemas.map((s, i) => i === index ? newSchema : s);\n        return updatedSchemas;\n      });\n    }\n  };\n\n  // Get options for dropdowns within blue box excluding already selected schemas\n  const getOptions = currentValue => {\n    const selectedValues = selectedSchemas.map(s => s.value);\n    return initialSchemas.filter(s => s.value === currentValue || !selectedValues.includes(s.value));\n  };\n\n  // Save segment data to server\n  const handleSaveSegment = () => {\n    const dataToSend = {\n      segment_name: segmentName,\n      schema: selectedSchemas.map(s => ({\n        [s.value]: s.label\n      }))\n    };\n    console.log('Saving data to server:', dataToSend);\n    fetch('https://webhook.site/4749232a-f4d3-488b-86a4-d7c8529c525d', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataToSend),\n      mode: 'no-cors'\n    }).then(response => {\n      setIsOpen(false);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 flex items-center justify-end bg-gray-500 bg-opacity-75\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative bg-white w-1/3 h-full p-6 shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"absolute top-2 right-2 text-gray-600 hover:text-gray-800\",\n        onClick: () => setIsOpen(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-[24px] block cursor-pointer\",\n          onClick: () => setIsOpen(false),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../arrow-drop-left-line.png\",\n            alt: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Saving Segment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter the name of the segment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter segment name\",\n          value: segmentName,\n          onChange: e => setSegmentName(e.target.value),\n          className: \"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: \"To save your segment, you need to build your query.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 bg-blue-100 p-4 rounded-md h-64 overflow-y-auto\",\n          children: selectedSchemas.map((schema, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: schema.value,\n              onChange: e => handleSchemaChange(index, e.target.value),\n              className: \"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 bg-white w-full\",\n              children: getOptions(schema.value).map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: s.value,\n                children: s.label\n              }, s.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2\",\n              children: [\"Selected value: \", schema.label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedSchema,\n            onChange: e => setSelectedSchema(e.target.value),\n            className: \"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 bg-white w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select schema to add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), initialSchemas.map(schema => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: schema.value,\n              children: schema.label\n            }, schema.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddSchema,\n            className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600\",\n            children: \"+ Add new schema\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-6 mt-[70px]\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveSegment,\n            className: \"mt-4 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600\",\n            children: \"Save Segment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsOpen(false),\n            className: \"mt-4 px-4 py-2 bg-gray-500 text-red-200 rounded-md hover:bg-gray-600\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"op4csiFQuthQn6W1hMZCXMzeLqc=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","isOpen","setIsOpen","_s","initialSchemas","label","value","segmentName","setSegmentName","selectedSchemas","setSelectedSchemas","selectedSchema","setSelectedSchema","handleAddSchema","some","s","schema","find","prevSchemas","handleSchemaChange","index","newSchema","updatedSchemas","map","i","getOptions","currentValue","selectedValues","filter","includes","handleSaveSegment","dataToSend","segment_name","console","log","fetch","method","headers","body","JSON","stringify","mode","then","response","catch","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["D:/Nanthini/product/react_project/customer-labs/my-app/src/Components/Form.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Form = ({ isOpen, setIsOpen }) => {\r\n  const initialSchemas = [\r\n    { label: 'First Name', value: 'first_name' },\r\n    { label: 'Last Name', value: 'last_name' },\r\n    { label: 'Gender', value: 'gender' },\r\n    { label: 'Age', value: 'age' },\r\n    { label: 'Account Name', value: 'account_name' },\r\n    { label: 'City', value: 'city' },\r\n    { label: 'State', value: 'state' },\r\n  ];\r\n\r\n  const [segmentName, setSegmentName] = useState('');\r\n  const [selectedSchemas, setSelectedSchemas] = useState([]);\r\n  const [selectedSchema, setSelectedSchema] = useState('');\r\n\r\n  // Add selected schema to the list of selectedSchemas\r\n  const handleAddSchema = () => {\r\n    if (selectedSchema && !selectedSchemas.some((s) => s.value === selectedSchema)) {\r\n      const schema = initialSchemas.find((s) => s.value === selectedSchema);\r\n      setSelectedSchemas((prevSchemas) => [...prevSchemas, schema]);\r\n      setSelectedSchema('');\r\n    }\r\n  };\r\n\r\n  // Handle change in the dropdown within blue box\r\n  const handleSchemaChange = (index, value) => {\r\n    const newSchema = initialSchemas.find((s) => s.value === value);\r\n    if (newSchema) {\r\n      setSelectedSchemas((prevSchemas) => {\r\n        const updatedSchemas = prevSchemas.map((s, i) => (i === index ? newSchema : s));\r\n        return updatedSchemas;\r\n      });\r\n    }\r\n  };\r\n\r\n  // Get options for dropdowns within blue box excluding already selected schemas\r\n  const getOptions = (currentValue) => {\r\n    const selectedValues = selectedSchemas.map((s) => s.value);\r\n    return initialSchemas.filter((s) => s.value === currentValue || !selectedValues.includes(s.value));\r\n  };\r\n\r\n  // Save segment data to server\r\n  const handleSaveSegment = () => {\r\n    const dataToSend = {\r\n      segment_name: segmentName,\r\n      schema: selectedSchemas.map((s) => ({ [s.value]: s.label })),\r\n    };\r\n    console.log('Saving data to server:', dataToSend);\r\n    fetch('https://webhook.site/4749232a-f4d3-488b-86a4-d7c8529c525d', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(dataToSend),\r\n      mode: 'no-cors',\r\n    })\r\n      .then((response) => {\r\n        setIsOpen(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-end bg-gray-500 bg-opacity-75\">\r\n      <div className=\"relative bg-white w-1/3 h-full p-6 shadow-lg\">\r\n        <button\r\n          className=\"absolute top-2 right-2 text-gray-600 hover:text-gray-800\"\r\n          onClick={() => setIsOpen(false)}\r\n        >\r\n          &times;\r\n        </button>\r\n        <div className=\"header flex items-center\">\r\n          <span className=\"w-[24px] block cursor-pointer\" onClick={() => setIsOpen(false)}>\r\n            <img src=\"../arrow-drop-left-line.png\" alt=\"Close\" />\r\n          </span>\r\n          <h2 className=\"text-xl font-bold\">Saving Segment</h2>\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <p>Enter the name of the segment</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter segment name\"\r\n            value={segmentName}\r\n            onChange={(e) => setSegmentName(e.target.value)}\r\n            className=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500 w-full\"\r\n          />\r\n          <p className=\"mt-4\">To save your segment, you need to build your query.</p>\r\n\r\n          <div className=\"mt-4 bg-blue-100 p-4 rounded-md h-64 overflow-y-auto\">\r\n            {selectedSchemas.map((schema, index) => (\r\n              <div key={index} className=\"mb-2\">\r\n                <select\r\n                  value={schema.value}\r\n                  onChange={(e) => handleSchemaChange(index, e.target.value)}\r\n                  className=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 bg-white w-full\"\r\n                >\r\n                  {getOptions(schema.value).map((s) => (\r\n                    <option key={s.value} value={s.value}>\r\n                      {s.label}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <p className=\"mt-2\">Selected value: {schema.label}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"mt-4\">\r\n            <select\r\n              value={selectedSchema}\r\n              onChange={(e) => setSelectedSchema(e.target.value)}\r\n              className=\"p-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500 bg-white w-full\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select schema to add\r\n              </option>\r\n              {initialSchemas.map((schema) => (\r\n                <option key={schema.value} value={schema.value}>\r\n                  {schema.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button\r\n              onClick={handleAddSchema}\r\n              className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600\"\r\n            >\r\n              + Add new schema\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex gap-6 mt-[70px]\">\r\n            <button\r\n              onClick={handleSaveSegment}\r\n              className=\"mt-4 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600\"\r\n            >\r\n              Save Segment\r\n            </button>\r\n            <button\r\n              onClick={() => setIsOpen(false)}\r\n              className=\"mt-4 px-4 py-2 bg-gray-500 text-red-200 rounded-md hover:bg-gray-600\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,cAAc,GAAG,CACrB;IAAEC,KAAK,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAa,CAAC,EAC5C;IAAED,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC9B;IAAED,KAAK,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAe,CAAC,EAChD;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,CACnC;EAED,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMgB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIF,cAAc,IAAI,CAACF,eAAe,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACT,KAAK,KAAKK,cAAc,CAAC,EAAE;MAC9E,MAAMK,MAAM,GAAGZ,cAAc,CAACa,IAAI,CAAEF,CAAC,IAAKA,CAAC,CAACT,KAAK,KAAKK,cAAc,CAAC;MACrED,kBAAkB,CAAEQ,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAEF,MAAM,CAAC,CAAC;MAC7DJ,iBAAiB,CAAC,EAAE,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAMO,kBAAkB,GAAGA,CAACC,KAAK,EAAEd,KAAK,KAAK;IAC3C,MAAMe,SAAS,GAAGjB,cAAc,CAACa,IAAI,CAAEF,CAAC,IAAKA,CAAC,CAACT,KAAK,KAAKA,KAAK,CAAC;IAC/D,IAAIe,SAAS,EAAE;MACbX,kBAAkB,CAAEQ,WAAW,IAAK;QAClC,MAAMI,cAAc,GAAGJ,WAAW,CAACK,GAAG,CAAC,CAACR,CAAC,EAAES,CAAC,KAAMA,CAAC,KAAKJ,KAAK,GAAGC,SAAS,GAAGN,CAAE,CAAC;QAC/E,OAAOO,cAAc;MACvB,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMG,UAAU,GAAIC,YAAY,IAAK;IACnC,MAAMC,cAAc,GAAGlB,eAAe,CAACc,GAAG,CAAER,CAAC,IAAKA,CAAC,CAACT,KAAK,CAAC;IAC1D,OAAOF,cAAc,CAACwB,MAAM,CAAEb,CAAC,IAAKA,CAAC,CAACT,KAAK,KAAKoB,YAAY,IAAI,CAACC,cAAc,CAACE,QAAQ,CAACd,CAAC,CAACT,KAAK,CAAC,CAAC;EACpG,CAAC;;EAED;EACA,MAAMwB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,UAAU,GAAG;MACjBC,YAAY,EAAEzB,WAAW;MACzBS,MAAM,EAAEP,eAAe,CAACc,GAAG,CAAER,CAAC,KAAM;QAAE,CAACA,CAAC,CAACT,KAAK,GAAGS,CAAC,CAACV;MAAM,CAAC,CAAC;IAC7D,CAAC;IACD4B,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,UAAU,CAAC;IACjDI,KAAK,CAAC,2DAA2D,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,UAAU,CAAC;MAChCU,IAAI,EAAE;IACR,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAClBzC,SAAS,CAAC,KAAK,CAAC;IAClB,CAAC,CAAC,CACD0C,KAAK,CAAEC,KAAK,IAAK;MAChBZ,OAAO,CAACY,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,IAAI,CAAC5C,MAAM,EAAE,OAAO,IAAI;EAExB,oBACEF,OAAA;IAAK+C,SAAS,EAAC,uEAAuE;IAAAC,QAAA,eACpFhD,OAAA;MAAK+C,SAAS,EAAC,8CAA8C;MAAAC,QAAA,gBAC3DhD,OAAA;QACE+C,SAAS,EAAC,0DAA0D;QACpEE,OAAO,EAAEA,CAAA,KAAM9C,SAAS,CAAC,KAAK,CAAE;QAAA6C,QAAA,EACjC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTrD,OAAA;QAAK+C,SAAS,EAAC,0BAA0B;QAAAC,QAAA,gBACvChD,OAAA;UAAM+C,SAAS,EAAC,+BAA+B;UAACE,OAAO,EAAEA,CAAA,KAAM9C,SAAS,CAAC,KAAK,CAAE;UAAA6C,QAAA,eAC9EhD,OAAA;YAAKsD,GAAG,EAAC,6BAA6B;YAACC,GAAG,EAAC;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACPrD,OAAA;UAAI+C,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNrD,OAAA;QAAK+C,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBhD,OAAA;UAAAgD,QAAA,EAAG;QAA6B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpCrD,OAAA;UACEwD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,oBAAoB;UAChClD,KAAK,EAAEC,WAAY;UACnBkD,QAAQ,EAAGC,CAAC,IAAKlD,cAAc,CAACkD,CAAC,CAACC,MAAM,CAACrD,KAAK,CAAE;UAChDwC,SAAS,EAAC;QAAwH;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnI,CAAC,eACFrD,OAAA;UAAG+C,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAAmD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAE3ErD,OAAA;UAAK+C,SAAS,EAAC,sDAAsD;UAAAC,QAAA,EAClEtC,eAAe,CAACc,GAAG,CAAC,CAACP,MAAM,EAAEI,KAAK,kBACjCrB,OAAA;YAAiB+C,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAC/BhD,OAAA;cACEO,KAAK,EAAEU,MAAM,CAACV,KAAM;cACpBmD,QAAQ,EAAGC,CAAC,IAAKvC,kBAAkB,CAACC,KAAK,EAAEsC,CAAC,CAACC,MAAM,CAACrD,KAAK,CAAE;cAC3DwC,SAAS,EAAC,gGAAgG;cAAAC,QAAA,EAEzGtB,UAAU,CAACT,MAAM,CAACV,KAAK,CAAC,CAACiB,GAAG,CAAER,CAAC,iBAC9BhB,OAAA;gBAAsBO,KAAK,EAAES,CAAC,CAACT,KAAM;gBAAAyC,QAAA,EAClChC,CAAC,CAACV;cAAK,GADGU,CAAC,CAACT,KAAK;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEZ,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC,eACTrD,OAAA;cAAG+C,SAAS,EAAC,MAAM;cAAAC,QAAA,GAAC,kBAAgB,EAAC/B,MAAM,CAACX,KAAK;YAAA;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAZ9ChC,KAAK;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAaV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENrD,OAAA;UAAK+C,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBhD,OAAA;YACEO,KAAK,EAAEK,cAAe;YACtB8C,QAAQ,EAAGC,CAAC,IAAK9C,iBAAiB,CAAC8C,CAAC,CAACC,MAAM,CAACrD,KAAK,CAAE;YACnDwC,SAAS,EAAC,gGAAgG;YAAAC,QAAA,gBAE1GhD,OAAA;cAAQO,KAAK,EAAC,EAAE;cAACsD,QAAQ;cAAAb,QAAA,EAAC;YAE1B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACRhD,cAAc,CAACmB,GAAG,CAAEP,MAAM,iBACzBjB,OAAA;cAA2BO,KAAK,EAAEU,MAAM,CAACV,KAAM;cAAAyC,QAAA,EAC5C/B,MAAM,CAACX;YAAK,GADFW,MAAM,CAACV,KAAK;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEjB,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eACTrD,OAAA;YACEiD,OAAO,EAAEnC,eAAgB;YACzBiC,SAAS,EAAC,oEAAoE;YAAAC,QAAA,EAC/E;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENrD,OAAA;UAAK+C,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnChD,OAAA;YACEiD,OAAO,EAAElB,iBAAkB;YAC3BgB,SAAS,EAAC,sEAAsE;YAAAC,QAAA,EACjF;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTrD,OAAA;YACEiD,OAAO,EAAEA,CAAA,KAAM9C,SAAS,CAAC,KAAK,CAAE;YAChC4C,SAAS,EAAC,sEAAsE;YAAAC,QAAA,EACjF;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjD,EAAA,CAxJIH,IAAI;AAAA6D,EAAA,GAAJ7D,IAAI;AA0JV,eAAeA,IAAI;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}